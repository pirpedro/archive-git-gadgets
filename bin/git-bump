#!/bin/bash

# this script will display the current version, automatically
# suggest a "minor" version update, and ask for input to use
# the suggestion, or a newly entered value.

# once the new version number is determined, the script will
# pull a list of changes from git history, prepend this to
# a file called CHANGELOG.md (under the title of the new version
# number), give user a chance to review and update the changelist
# manually if needed and create a GIT tag.

#git scritp variables
SUBDIRECTORY_OK="yes"
USAGE=`cat << EOF
[OPTIONS] [INCREMENT] [BRANCH]

  INCREMENT
    Optional parameter that change the increment in version.
    The default version format is 'major.minor.patch' with
    minor increments if the parameter was not mentioned.

  OPTIONS

    -c | --commit       Commit and tag version changes.

    -i | --interactive  Use interactive mode.

    -p | --push         Push to remote the current changes.

    -R | --recursive    Recursive find/replace git project by version
                        pattern.

    -t | --tag          Regenerate the current tag if exists new commits.

    -v | --version      Specify your own version number for the bump.

EOF`

VERSION_FILE=$(git stats --root-path)/.version
CHANGELOG_FILE=$(git stats --root-path)/CHANGELOG.md
TEMP_FILE=$(git stats --root-path)/tmpfile

source $(git stats --script-location $0)/git-bump-common

load_settings(){
  gadgets_load_settings
  export CURRENT_VERSION=$(bump_retrieve_current_version)
}

flow="$1"; shift;
if ! startswith "$1" "-"; then
  action="$1"; shift;
fi

load_settings

BUMP_FILE=$(location $0)/git-bump-$flow
if [[ -e $BUMP_FILE ]]; then
  if [[ ! -x $BUMP_FILE ]]; then
    sudo chmod +x $BUMP_FILE
  fi

  if ! gadgets_bump_is_initialized && [ "$flow" != "init" ]; then
    die "Bump is not initialized. Please execute 'git flow init' to start setup."
  fi
  #Run flow
  . $BUMP_FILE
  "${action:-"default"}" "$@"
else
  usage
fi
