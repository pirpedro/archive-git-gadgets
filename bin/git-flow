#!/bin/bash

#git script variables
SUBDIRECTORY_OK="yes"
USAGE=`cat << EOF
[FLOW] [ACTION] [BRANCH_NAME]
      Google for 'git flow' to understand the approach.
      FLOW
      feature  - do actions in feature phase of the workflow
      release  - do actions in release phase of the workflow
      hotfix   - do actions in hotfix phase of the workflow
      ACTION
      start     mostly create a new branch in [FLOW] phase and
                bump version if necessary.
      finish    mostly merge the changes in [FLOW] phase and
                create tags if necessary.
      push      mostly syncronize master and develop branchs
                with remote and remove the [FLOW] branch created.
EOF`

source $(git stats --script-location $0)/git-common

load_settings(){
  gadgets_load_settings
  export DEVELOP_BRANCH=$(git_get flow.branch.develop)
}

flow="$1"; shift;
if ! startswith "$1" "-"; then
  action="$1"; shift;
fi

load_settings

FLOW_FILE=$(location $0)/git-flow-$flow
if [[ -e $FLOW_FILE ]]; then
  if [[ ! -x $FLOW_FILE ]]; then
    sudo chmod +x $FLOW_FILE
  fi

  if ! git_flow_is_initialized && [ "$flow" != "init" ]; then
    die "Flow is not initialized. Please execute 'git flow init' to start setup."
  fi
  #Run flow
  . $FLOW_FILE
  "${action:-"default"}" "$@"
else
  usage
fi
