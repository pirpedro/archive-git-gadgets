#git script variables
SUBDIRECTORY_OK="yes"

USAGE=`cat << EOF
[<OPTIONS>] <INCREMENT> <branch>

         --branch             Create a new branch to control changes
                              in a safe working tree.
    -i | --interactive        Use interactive mode.
         --no-tag             Don\'t create tag for bumped version.
         --preview            Show preview of next version number based on the
                              increment argument.
         --version            Specify your own version number for the bump.
EOF`

LONG_USAGE=`cat << EOF
INCREMENT
  Optional parameter that change the increment in version.
  The default version format is \'major.minor.patch\' with
  default minor increments \if parameter not mentioned.

  USAGE

  git bump <version> [<--branch|--branch=prefix> <--no-tag>  <--version=2.7.0>]
EOF`


default(){
  local increment target_branch latest_hash current_version bump_version new_branch

  for arg do
    shift
    case "$arg" in
      major|minor|patch) increment="$arg"                               ;;
      --branch) set_flag branch                                         ;;
      --branch=*) set_flag branch; new_branch=${arg##--branch=}         ;;
      -i|--interactive) set_flag interactive; verbosity on              ;;
      --no-tag) set_flag no_tag                                         ;;
      --preview) set_flag preview                                       ;;
      --version=*)
        PARAM_VERSION=${arg##--version=}
        ! empty $PARAM_VERSION || die "You need to pass version number" ;;
      -*|--*) usage "git bump version"; exit                            ;;
      *) set -- "$@" "$arg"                                             ;;
    esac
  done

  cd "$(git stats --root-path)" || die "Couldn't access projet root folder."
  # set the git bump target branch.
  if ! empty "$1" && ! startswith "$1" "-"; then target_branch="$1"; else target_branch=$(git stats --long-current-branch); fi
  latest_hash=`git log --pretty=format:'%h' -n 1`

  current_version=$(bump_retrieve_current_version)
  note "Current version: __${current_version}__"
  note "Latest commit hash: __${latest_hash}__"

  bump_version="${PARAM_VERSION:-`bump_suggest_version_number "$increment"`}"

  # bump version handle only with above version.
  if ! bump_compare_version "$bump_version"; then
    die "New version is not above current version. Use 'git bump revert-to' instead."
  fi

  if flag preview; then
    echo "$bump_version"
    exit
  fi

  if flag interactive; then
    ask --question="Enter a version number" --default="$bump_version" --free-answer
    bump_version=${ask_answer}
  fi
  note "Will set new version to __${bump_version}__."

  if flag interactive && ! flag branch; then
    ask_boolean "Create new branch?"
    if check_boolean ${ask_answer}; then
      set_flag branch;
    fi
  fi

  if flag branch; then
    new_branch=${new_branch:-`git_get bump.prefix.tag`}
  fi

  if flag interactive && flag branch; then
    ask --question="Enter new branch name" --default="$new_branch" --free-answer
    new_branch="${ask_answer}"
  fi

  if flag branch; then
    require_branch_absent "$new_branch$bump_version"
    git_checkout $new_branch$bump_version $target_branch
  fi

  bump_version_number "$bump_version" && bump_changelog "$bump_version" "$current_version"
  git_commit bump-version "${bump_version}"

  if ! flag no_tag; then
    git bump tag
  fi
}
